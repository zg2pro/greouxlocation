import { ElementRef, ChangeDetectorRef, QueryList, OnInit, SimpleChanges, OnChanges, EventEmitter, OnDestroy } from "@angular/core";
import { Http } from "@angular/http";
import { ImageService } from "../services/image.service";
import { Subscription } from 'rxjs/Subscription';
import 'rxjs/add/operator/map';
export declare class GalleryComponent implements OnInit, OnDestroy, OnChanges {
    ImageService: ImageService;
    http: Http;
    ChangeDetectorRef: ChangeDetectorRef;
    providedImageMargin: number;
    providedImageSize: number;
    providedGalleryName: string;
    providedMetadataUri: string;
    viewerChange: EventEmitter<boolean>;
    galleryContainer: ElementRef;
    imageElements: QueryList<any>;
    triggerCycle(event: any): void;
    windowResize(event: any): void;
    gallery: any[];
    imageDataStaticPath: string;
    imageDataCompletePath: string;
    dataFileName: string;
    images: any[];
    minimalQualityCategory: string;
    viewerSubscription: Subscription;
    constructor(ImageService: ImageService, http: Http, ChangeDetectorRef: ChangeDetectorRef);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    openImageViewer(img: any): void;
    private fetchDataAndRender();
    private render();
    private shouldAddCandidate(imgRow, candidate);
    private calcRowHeight(imgRow);
    private calcImageMargin();
    private calcOriginalRowWidth(imgRow);
    private calcIdealHeight();
    private getGalleryWidth();
    private scaleGallery();
    private checkForAsyncLoading(image, imageCounter);
    private isScrolledIntoView(element);
}
